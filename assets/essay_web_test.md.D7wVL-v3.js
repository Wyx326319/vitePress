import{_ as a,c as e,o as t,a4 as r}from"./chunks/framework.CsYP9yp8.js";const q=JSON.parse('{"title":"基础八股文","description":"","frontmatter":{},"headers":[],"relativePath":"essay/web/test.md","filePath":"essay/web/test.md"}'),o={name:"essay/web/test.md"},l=r('<h1 id="基础八股文" tabindex="-1">基础八股文 <a class="header-anchor" href="#基础八股文" aria-label="Permalink to &quot;基础八股文&quot;">​</a></h1><h2 id="_1-instanceof的原理" tabindex="-1">1. instanceof的原理 <a class="header-anchor" href="#_1-instanceof的原理" aria-label="Permalink to &quot;1. instanceof的原理&quot;">​</a></h2><h2 id="_2-new-的原理" tabindex="-1">2. new 的原理 <a class="header-anchor" href="#_2-new-的原理" aria-label="Permalink to &quot;2. new 的原理&quot;">​</a></h2><h2 id="_3-js的作用域" tabindex="-1">3. js的作用域 <a class="header-anchor" href="#_3-js的作用域" aria-label="Permalink to &quot;3. js的作用域&quot;">​</a></h2><h2 id="_4-js事件流" tabindex="-1">4. js事件流 <a class="header-anchor" href="#_4-js事件流" aria-label="Permalink to &quot;4. js事件流&quot;">​</a></h2><h2 id="_5-js事件轮询机制" tabindex="-1">5. js事件轮询机制 <a class="header-anchor" href="#_5-js事件轮询机制" aria-label="Permalink to &quot;5. js事件轮询机制&quot;">​</a></h2><h2 id="_6-解释一下原型链" tabindex="-1">6. 解释一下原型链 <a class="header-anchor" href="#_6-解释一下原型链" aria-label="Permalink to &quot;6. 解释一下原型链&quot;">​</a></h2><h2 id="_7-谈谈你对作用域的理解" tabindex="-1">7. 谈谈你对作用域的理解 <a class="header-anchor" href="#_7-谈谈你对作用域的理解" aria-label="Permalink to &quot;7. 谈谈你对作用域的理解&quot;">​</a></h2><h2 id="_8-闭包的作用和原理以及使用场景" tabindex="-1">8. 闭包的作用和原理以及使用场景 <a class="header-anchor" href="#_8-闭包的作用和原理以及使用场景" aria-label="Permalink to &quot;8. 闭包的作用和原理以及使用场景&quot;">​</a></h2><h2 id="_9-js连续多个bind-最后this指向是什么" tabindex="-1">9. js连续多个bind，最后this指向是什么？ <a class="header-anchor" href="#_9-js连续多个bind-最后this指向是什么" aria-label="Permalink to &quot;9. js连续多个bind，最后this指向是什么？&quot;">​</a></h2><h2 id="_10-0-1-0-2为什么不等于0-3" tabindex="-1">10. 0.1+0.2为什么不等于0.3 <a class="header-anchor" href="#_10-0-1-0-2为什么不等于0-3" aria-label="Permalink to &quot;10. 0.1+0.2为什么不等于0.3&quot;">​</a></h2><h2 id="_11-symbol这个新增的基础数据类型有什么用" tabindex="-1">11. symbol这个新增的基础数据类型有什么用 <a class="header-anchor" href="#_11-symbol这个新增的基础数据类型有什么用" aria-label="Permalink to &quot;11. symbol这个新增的基础数据类型有什么用&quot;">​</a></h2><h2 id="_12-typeof-null-为什么是object" tabindex="-1">12. typeof null 为什么是object <a class="header-anchor" href="#_12-typeof-null-为什么是object" aria-label="Permalink to &quot;12. typeof null 为什么是object&quot;">​</a></h2><h2 id="_13-es6新特性-箭头函数和普通函数有啥区别-箭头函数能当构造函数吗" tabindex="-1">13. es6新特性？箭头函数和普通函数有啥区别？箭头函数能当构造函数吗？ <a class="header-anchor" href="#_13-es6新特性-箭头函数和普通函数有啥区别-箭头函数能当构造函数吗" aria-label="Permalink to &quot;13. es6新特性？箭头函数和普通函数有啥区别？箭头函数能当构造函数吗？&quot;">​</a></h2><h2 id="_14-promise-all-和-promise-allsettled区别" tabindex="-1">14. promise.all 和 promise.allsettled区别 <a class="header-anchor" href="#_14-promise-all-和-promise-allsettled区别" aria-label="Permalink to &quot;14. promise.all 和 promise.allsettled区别&quot;">​</a></h2><h2 id="_15-substring和substr的区别" tabindex="-1">15. substring和substr的区别 <a class="header-anchor" href="#_15-substring和substr的区别" aria-label="Permalink to &quot;15. substring和substr的区别&quot;">​</a></h2><h2 id="_16-js脚本异步加载如何实现-有什么区别" tabindex="-1">16. js脚本异步加载如何实现 有什么区别 <a class="header-anchor" href="#_16-js脚本异步加载如何实现-有什么区别" aria-label="Permalink to &quot;16. js脚本异步加载如何实现 有什么区别&quot;">​</a></h2><h2 id="_17-for-in-for-of的区别" tabindex="-1">17. for in/for of的区别 <a class="header-anchor" href="#_17-for-in-for-of的区别" aria-label="Permalink to &quot;17. for in/for of的区别&quot;">​</a></h2><h2 id="_18-js中如何判断数据类型" tabindex="-1">18. js中如何判断数据类型 <a class="header-anchor" href="#_18-js中如何判断数据类型" aria-label="Permalink to &quot;18. js中如何判断数据类型&quot;">​</a></h2><h2 id="_19-splice和slice会改变原数组吗-怎么删除数组最后一个元素" tabindex="-1">19. splice和slice会改变原数组吗？怎么删除数组最后一个元素？ <a class="header-anchor" href="#_19-splice和slice会改变原数组吗-怎么删除数组最后一个元素" aria-label="Permalink to &quot;19. splice和slice会改变原数组吗？怎么删除数组最后一个元素？&quot;">​</a></h2><h2 id="_20-和-有什么区别" tabindex="-1">20. ==和===有什么区别 <a class="header-anchor" href="#_20-和-有什么区别" aria-label="Permalink to &quot;20. ==和===有什么区别&quot;">​</a></h2><h2 id="_21-解释-requestanimationframe-requestidlecallback-分别有什么用" tabindex="-1">21. 解释 requestAnimationFrame/requestIdleCallback，分别有什么用？ <a class="header-anchor" href="#_21-解释-requestanimationframe-requestidlecallback-分别有什么用" aria-label="Permalink to &quot;21. 解释 requestAnimationFrame/requestIdleCallback，分别有什么用？&quot;">​</a></h2><h2 id="_22-let全局声明变量-window能取到吗" tabindex="-1">22. let全局声明变量，window能取到吗？ <a class="header-anchor" href="#_22-let全局声明变量-window能取到吗" aria-label="Permalink to &quot;22. let全局声明变量，window能取到吗？&quot;">​</a></h2><h2 id="_23-数组foreach能否结束循环" tabindex="-1">23. 数组foreach能否结束循环 <a class="header-anchor" href="#_23-数组foreach能否结束循环" aria-label="Permalink to &quot;23. 数组foreach能否结束循环&quot;">​</a></h2><h2 id="_24-canvas怎么判断点在图形内-低频" tabindex="-1">24. canvas怎么判断点在图形内？（低频） <a class="header-anchor" href="#_24-canvas怎么判断点在图形内-低频" aria-label="Permalink to &quot;24. canvas怎么判断点在图形内？（低频）&quot;">​</a></h2><h2 id="_25-如何合并对象" tabindex="-1">25. 如何合并对象 <a class="header-anchor" href="#_25-如何合并对象" aria-label="Permalink to &quot;25. 如何合并对象&quot;">​</a></h2><h2 id="_26-如何判断一个对象是不是空对象" tabindex="-1">26. 如何判断一个对象是不是空对象 <a class="header-anchor" href="#_26-如何判断一个对象是不是空对象" aria-label="Permalink to &quot;26. 如何判断一个对象是不是空对象&quot;">​</a></h2>',27),s=[l];function i(h,n,d,c,b,u){return t(),e("div",null,s)}const f=a(o,[["render",i]]);export{q as __pageData,f as default};
